Revison History for App::Fetchware

{{$NEXT}}

1.011     2014-09-05 00:59:30-04:00 America/New_York
    - Added support for the new command to the Fetchware API, so Fetchware
      extensions can now easily implement the new command to also help their
      users easily make Fetchwarefiles.
    - Also added check_syntax() to the Fetchware API providing Fetchware-level
      Fetchwarefile syntax checking. No parsing of Perl is done as that's best
      left to perl itself.
    - The upgrade() subroutine was also added to the Fetchware API allowing
      Fetchware extensions to easily change Fetchware's definition of when your
      Fetchware package should be upgraded.
    - Added support for these new API subroutines to Fetchware's example
      Fetchware extension App::FetchwareX::HTMLPageSync.
    - Added perl 5.10.1 as an "official" dependency. Each Perl file always had a
      "use 5.010001;" line, but it was never declared in dist.ini.
    - Many minor doc fixes and tweaks, and the Fetchware extension documentation
      was updated to cover the new API subroutines new(), new_install(),
      check_syntax(), and upgrade().

1.010     2013-12-14 04:10:18 America/New_York
    - Fixed github#4 by added a more reliable checksum parser that should be
      generic enough to parse anything simple and reasonable.
    - Fixed a bug related to github#4 that caused ftp timestamp parsing to fail
      if file listing had symbolic links in it.
    - Also fixed the "uninitialized variables" bug again. The previous fix was
      horrible. It took a few tries to figure it out, and almost resulted in
      breaking fetchware's command line interface again, but my command line
      tests saved me from that nightmare. Tests rule!

1.009     2013-12-11 22:41:13 America/New_York
    - Fixed github#2-3 for good by introducing tests for both run() and actually
      running the program with arguments to check its command line arguments.
      Now, if I break the user interface, and fetchware becomes useless, I'll
      actually know from just its own tests.
    - Created a new testing helper subroutine, fork_ok(). All it does is fork,
      execute the specified coderef, and pass or fail based on the forked
      proces's exit status. Used in the test suite testing mentioned above.
    - Fixed a typo that caused fetchware's -h, --help, and -? command line
      options to not work at all. Until this release fetchware was calling the
      help() subroutine, which no longer exists. It was renamed cmd_help() a
      long time ago. This is now fixed, and tested for.
    - Fixed an annoying bug that caused App-Fetchware-$VERSION.fpkg to be left
      in user's fetchware package directory. Fetchware's test suite creates a
      few test packages, and copies them to the user's fetchware database
      directory. These packages are then deleted, because they are only used for
      testing, so they do not need to be left there with the user wondering
      where they came from.
    - And a number of small bug fixes and typos as well.

1.008     2013-11-30 04:46:59 America/New_York
    - Fixed github#1 by fixing mistakenly commented out code that was poorly
      half refactored.
    - Fixed github#2 and 3 by fixing botched removal of given/when in
      bin/fetchware's run() subroutine.
    - Fixed 2 miscellaneous bugs while fixing github#1-3.
        - Fixed a bizarre HEREDOC parsing bug, caused by perl not parsing the
          HEREDOC properly. Vim's syntax highlighting were also confused.
          Perhaps the bug was my code? Probably was. Not bothering p5p with it.
        - Fixed bug leaving test-dists in user's fetchware package database.
          These really should be deleted, because test-dist and friends made by
          Util's make_test_dist() subroutine do *not* actually install anything
          or touch your computer at all. They just contain fake build and
          install commands that just print to your screen to support testing
          building and installing software without actually building or
          installing stuff.

1.007     2013-11-25 23:53:58 America/New_York
    - Fixed a bunch of CPAN Testers FAILs. Including:
        - Weird t/bin-fetchware-upgrade.t test-dist fail bug.
        - Added SKIP block unless -t to t/bin-fetchware-new.t testing.
        - Fixed sort block returning undef bug, and added extra tests too.

1.006     2013-11-25 02:59:52 America/New_York
    - Fixed Test::Expect CPAN Testers FAILs by switching from use to requires.

1.005     2013-11-24 01:19:18 America/New_York
    - Another attempt at fixing the indexing being messed up. Turns out my
      dist.init is missing a [PkgVersion] directive. I use Pod::Weaver, so I
      probably removed it when I removed [PodVersion], but I should not have,
      because it is still needed.

1.004     2013-11-23 02:19:58 America/New_York
    - Attempt to fix bin/fetchware not properly being indexed again :)
      bin/fetchware was missing a shebang line. This has been fixed. Perhaps
      this is the snag preventing bin/fetchware from being indexed properly.

1.003     2013-11-23 01:42:54 America/New_York
    - Fix in 1.002 failed to fix bin/fetchware indexing. Going to try giving
      package fetchware; a blank line around itself maybe that will do the
      trick.

1.002     2013-11-23 01:23:55 America/New_York
    - Fixed bin/fetchware not being properly indexed by PAUSE due to using both
      # PODNAME and a package fetchware; in the same file.

1.001     2013-11-23 00:31:02 America/New_York
    - Fixed numerous simple test failures reported automatically from CPAN
      Testers.
      - See: http://www.cpantesters.org/distro/A/App-Fetchware.html for listing
        of failed test reports. All of them failed :) Be sure to select the
        reports for version 1.00, which corresponds to the version of fetchware
        that was tested.
    - Replaced given/when with regular ifs due to 5.18 deprecation of given/when. 
      - RIP given/when and smartmatch and ~~. With any luck you'll be
        reincarnated soon.

1.000     2013-11-20 00:29:13 America/New_York
    - Initial release!
